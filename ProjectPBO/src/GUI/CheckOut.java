/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Connection.Conn;
import MainClasses.Drink;
import MainClasses.Food;
import MainClasses.Item;
import MainClasses.Ticket;
import MainClasses.User;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Rafly
 */
public class CheckOut extends javax.swing.JFrame {
Conn con;
 DefaultTableModel model;
 private ArrayList<Double> disc = new ArrayList<Double>();
    /**
     * Creates new form CheckOut
     */
   private  boolean condition;
   User user; 
   int data = 1 ;
   Ticket ticket;
   Drink drink;
   private Food food;
   private double totalHarga = 0;
   public CheckOut() {
        initComponents();

    }
    public CheckOut(User user, Ticket ticket, Food food, Drink drink) {
        Conn.koneksi();
        this.con = new Conn();     
       this.condition = false;
          initComponents();
        this.setTitle("Checkout");
        this.ticket = ticket; 
        this.drink = drink;
        this.food = food;
        this.user = user;
        this.setLocationRelativeTo(null);
        this.setAddRow();

   
//        //Kebawah
//        System.out.println(table2.getRowCount());
//        Kesamping
    
//    System.out.println(table2.getModel().getValueAt(0, 1));
   
    }
    
//    public CheckOut(User user, Drink drink) {
//        Conn.koneksi();
//        this.con = new Conn();
//          initComponents();
//        this.drink = drink; 
//        this.user = user;
//        this.setLocationRelativeTo(null);
//        this.setAddRow();
//    }
    public void setAddRow() { 
          model = (DefaultTableModel) table2.getModel();
     
        
        if(this.ticket != null) {
       
         if(this.ticket.getJumlah()>=3) { 
           this.ticket.isitDiscount(0.10,this.ticket.getJumlah());
           this.totalHarga += this.ticket.getTotal();
           disc.add(this.ticket.getDiscount());
           
         }else { 
            this.ticket.isitDiscount(this.ticket.getJumlah());
             this.totalHarga += this.ticket.getTotal();
            disc.add(0.0);
               } 
            model.addRow(new Object[]{data++, this.ticket.getNama(),this.ticket.getJumlah(), this.ticket.getTotal()});
           
             
        }  
        if(this.food != null) { 
            model.addRow(new Object[]{data++, this.food.getName() + "(" + this.food.getFlavour()+","+ this.food.getSize()+")" ,this.food.getJumlah(), this.food.getTotal()});
            this.totalHarga += this.food.getTotal();
            this.disc.add(this.food.getDiscount());
        }
        if(this.drink != null) { 
            model.addRow(new Object[]{data++, this.drink.getName() + "("+ this.drink.getSize()+")" ,this.drink.getJumlah(), this.drink.getTotal()});
            this.totalHarga += this.drink.getTotal();
            System.out.println(this.drink.getDiscount());
            this.disc.add(this.drink.getDiscount());
          
        }
       
        totalLabel.setText(""+this.totalHarga);
        
        
     
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialog = new javax.swing.JDialog();
        asd = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        bayar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout dialogLayout = new javax.swing.GroupLayout(dialog.getContentPane());
        dialog.getContentPane().setLayout(dialogLayout);
        dialogLayout.setHorizontalGroup(
            dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dialogLayout.setVerticalGroup(
            dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        asd.setBackground(new java.awt.Color(51, 153, 255));
        asd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/DELETE.png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        asd.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 120, 30));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Back_Jadi.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        asd.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 300, 110, 110));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/GenerateT_Jadi.png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        asd.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 120, 40));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Submit_1.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        asd.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 110, 40));

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama Barang", "Jumlah Barang", "Total barang"
            }
        ));
        jScrollPane2.setViewportView(table2);
        if (table2.getColumnModel().getColumnCount() > 0) {
            table2.getColumnModel().getColumn(0).setPreferredWidth(10);
            table2.getColumnModel().getColumn(1).setPreferredWidth(70);
            table2.getColumnModel().getColumn(2).setPreferredWidth(10);
            table2.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        asd.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 683, 200));

        bayar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        asd.add(bayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 223, 41));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Total:");
        asd.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, 104, 41));

        totalLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        totalLabel.setText("0");
        asd.add(totalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 205, 47));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/CheckOutBG.png"))); // NOI18N
        asd.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(asd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(asd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
               
        if(condition) { 
        String path = System.getProperty("user.home");
        Document doc = new Document(); 
        String random = "T-CAT";
        for(int i = 0; i<=4; i++) { 
            random += (int)Math.floor(Math.random() * (9 - 0 + 1) + 0);
        }
        try { 
        PdfWriter.getInstance(doc, new FileOutputStream(path + "/Downloads/"+ random+".pdf"));
        doc.open();
        Paragraph para = new Paragraph(); 
        para.setAlignment(Element.ALIGN_JUSTIFIED);
        para.setIndentationLeft(220);
        para.add("T-CAT MOVIES\n\n");
        Paragraph p1 = new Paragraph("Nama Movies   :   " + this.ticket.getNama());
        p1.setIndentationLeft(150);
        Paragraph p2 = new Paragraph("Nomor Kursi     :  " + this.ticket.getKursi().toString());
        p2.setIndentationLeft(150);
        Paragraph p3 = new Paragraph("Jam                  :   " + this.ticket.getJam());
        p3.setIndentationLeft(150);
        Paragraph p4 = new Paragraph("Tanggal            :   " + this.ticket.getTanggalPilih());
        p4.setIndentationLeft(150);
        doc.add(para);
        doc.add(p1);
        doc.add(p2);
        doc.add(p3);
        doc.add(p4);
        doc.close(); 
        JOptionPane.showMessageDialog(null, "Ticket Berhasil dibuat", "Success", JOptionPane.INFORMATION_MESSAGE);
        this.ticket = null;
        }catch(Exception e) { 
            JOptionPane.showMessageDialog(null, "Anda Tidak Memesan Tiket", "Gagal", JOptionPane.ERROR_MESSAGE );
        }  
        }
        else { 
         JOptionPane.showMessageDialog(null, "Tiket Gagal dibuat", "Failed!!", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
         int totalUang = 0;
        try { 
             totalUang = Integer.parseInt(bayar.getText());  
        
        if(totalUang>= this.totalHarga && (this.ticket != null || this.food != null || this.drink != null) ) { 
            this.condition = true;
            for(int i = 0; i < table2.getRowCount();i++) { 
             String nama = table2.getModel().getValueAt(i, 1).toString();
             String jumlah = table2.getModel().getValueAt(i, 2).toString();
             String total = table2.getModel().getValueAt(i, 3).toString();
             System.out.println(nama + " " + jumlah + " " + total + this.disc.get(i));
             String query = "INSERT INTO `history`(username_user, nama_barang,jumlah_barang,harga, discount) values ('"+this.user.getName()+"','"+nama+"','"+jumlah+"','"+total+"', '"+this.disc.get(i)+"');";
                try {
                    con.getStm().executeUpdate(query);
                  
                } catch (SQLException ex) {
                    Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            JOptionPane.showMessageDialog(null, "Anda Berhasil Membayar", "Success" , JOptionPane.INFORMATION_MESSAGE);
             bayar.setText("");
              if(this.ticket != null) { 
                    for(int j = 0; j < this.ticket.getKursi().size(); j++) { 
                        String queryTicket = "INSERT INTO kursi(kode_kursi, kode_movie, tanggal,jam) VALUES ('"+this.ticket.getKursi().get(j)+"', '"+this.ticket.getKode()+"' , '"+this.ticket.getTanggalPilih()+"' , '"+this.ticket.getJam()+"')";
                        try {
                            con.getStm().executeUpdate(queryTicket);
                        } catch (SQLException ex) {
                            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    }
              
            if(this.ticket == null) { 
               this.food = null;
               this.drink = null;
                Dashboard dash = new Dashboard(user,ticket,food, drink);
                dash.setVisible(true);
                this.setVisible(false);
                this.dispose();
            }else { 
                this.food = null;
                this.drink = null;
                while(model.getRowCount() >0) { 
                    model.removeRow(0);
                }
            }  
              this.totalLabel.setText("0");
        }else { 
          JOptionPane.showMessageDialog(null, "Uang Kurang!", "Failed!", JOptionPane.ERROR_MESSAGE);
        }
        
            
        
       }catch(Exception e) { 
            JOptionPane.showMessageDialog(null, "Anda Bukan Memasukan angka", "Gagal!", JOptionPane.WARNING_MESSAGE);
           
        }
     
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        this.ticket = null;
        this.food = null;
        this.drink = null;
           Dashboard dash = new Dashboard(user, ticket, food, drink);
        dash.setVisible(true);
        this.setVisible(false);
        this.dispose();
        
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here
       try {  
         String data = table2.getModel().getValueAt(table2.getSelectedRow(), 1).toString();
        if(table2.getSelectedRow() != -1) { 

            if(data.contains("Popcorn")) {
                this.totalHarga -= this.food.getTotal();
                  this.food = null;
                  this.disc.remove(table2.getSelectedRow());
                model.removeRow(table2.getSelectedRow());
            }else if(data.contains("Coca-cola") || data.contains("Sprite") || data.contains("Fanta") ||data.contains("Pepsi")) { 
                  this.totalHarga -= this.drink.getTotal();
                  this.drink = null;
                  this.disc.remove(table2.getSelectedRow());
                     model.removeRow(table2.getSelectedRow());
            }else { 
                   this.totalHarga -= this.ticket.getTotal();
                   this.ticket = null;
                   this.disc.remove(table2.getSelectedRow());
                      model.removeRow(table2.getSelectedRow());
            }
            this.totalLabel.setText(""+this.totalHarga);
            
        }
       }catch(Exception e) { 
            JOptionPane.showMessageDialog(null, "Data sudah terhapus semuanya!", "FAILED!", JOptionPane.ERROR_MESSAGE);
            this.totalLabel.setText("0");
       }
       

    }//GEN-LAST:event_jLabel6MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel asd;
    private javax.swing.JTextField bayar;
    private javax.swing.JDialog dialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table2;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
